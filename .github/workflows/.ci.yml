name: CI
on:
  workflow_dispatch:
    inputs:
      push-docker-image-to-harbor:
        description: "Push Docker Image to Harbor"
        type: boolean
        default: false
  pull_request:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install python-ldap system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsasl2-dev python3-dev libldap2-dev libssl-dev

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[code-analysis]
          python -m pip install -r requirements.txt

      - name: Run black
        run: black --check --line-length 120 ldap_jwt_auth test

      - name: Run pylint
        run: pylint ldap_jwt_auth

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Create logging configuration file
        run: cp logging.example.ini logging.ini

      - name: Run unit tests
        run: |
          docker build --file Dockerfile --target test --tag ldap-jwt-auth:test .
          docker run \
           --name ldap-jwt-auth \
           --volume ./logging.ini:/app/logging.ini \
           ldap-jwt-auth:test \
           pytest --config-file test/pytest.ini --cov ldap_jwt_auth --cov-report xml test/unit -v
          docker cp ldap-jwt-auth:/app/coverage.xml coverage.xml

      - name: Upload coverage reports to Codecov
        if: success()
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docker:
    # This job triggers only if all the other jobs succeed. It builds the Docker image
    # and if run manually from Github Actions, it pushes to Harbor.
    needs: [linting, unit-tests]
    name: Docker
    runs-on: ubuntu-latest
    env:
      PUSH_DOCKER_IMAGE_TO_HARBOR: ${{ inputs.push-docker-image-to-harbor != null && inputs.push-docker-image-to-harbor || 'false' }}
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ vars.HARBOR_URL }}/auth-api

      - name: Login to Harbor
        if: ${{ fromJSON(env.PUSH_DOCKER_IMAGE_TO_HARBOR) }}
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ vars.HARBOR_URL }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: ${{ fromJSON(env.PUSH_DOCKER_IMAGE_TO_HARBOR) && 'Build and push Docker image to Harbor' || 'Build Docker image' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: ${{ fromJSON(env.PUSH_DOCKER_IMAGE_TO_HARBOR) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: prod
